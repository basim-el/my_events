generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  pseudo        String        @unique
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  password      String?
  avatar        String
  bio           String?
  facebookId    String?       @unique
  googleId      String?       @unique
  outings       Outing[]
  messages      Message[]
  outingsJoined Participant[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Outing {
  id                Int           @id @default(autoincrement())
  openAgendaEventId String
  organizerId       String
  visibility        String
  eventName         String
  organizer         User          @relation(fields: [organizerId], references: [id])
  messages          Message[]
  Participant       Participant[]
}

model Participant {
  id        Int      @id @default(autoincrement())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  outingId  Int
  role      String   @default("guest")
  outing    Outing   @relation(fields: [outingId], references: [id])
  createdAt DateTime @default(now())
}

model Message {
  id        Int      @id @default(autoincrement())
  outingId  Int
  userId    String
  message   String
  timestamp DateTime
  outing    Outing   @relation(fields: [outingId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}
